// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = '1.9.24'
    ext.compose_version = '1.5.14'
    ext.lottie_version = '5.2.0'
    ext.camerax_version = '1.3.3'
    ext.iad_version = '2.4.1'

    dependencies {
        classpath 'com.github.skhatri:gradle-s3-plugin:1.0.6'
        classpath 'joda-time:joda-time:2.10.1'
        classpath 'com.android.tools.build:gradle:8.7.3'
        classpath 'org.jacoco:org.jacoco.core:0.8.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'


    }
}

plugins {
    id 'com.android.application' version '8.7.3' apply false
    id 'org.jetbrains.kotlin.android' version "$kotlin_version" apply false
    id 'com.android.library' version '8.7.3' apply false
}

ext {
    isRelease = checkProperty('isRelease', '0')
    deployVersionName = "${getTimeStamp()}"
    deployVersionCode = "1"
    appCenterSecret = ""

    // If you need to build signed APK locally, please checkout android-keystore repository and update these properties manually
    appKeyStorePassword = checkProperty('appKeyStorePassword', '')
    appKeyAlias = checkProperty('appKeyAlias', '')
    appKeyPassword = checkProperty('appKeyPassword', '')
    appKeyPath = checkProperty('appKeyPath', '../key.jks')
}

private static getTimeStamp() {
    return Calendar.getInstance().getTimeInMillis()
}

def checkProperty(String propertyName, defaultValue) {
    if (project.hasProperty(propertyName)) {
        return project.getProperty(propertyName)
    } else {
        return defaultValue
    }
}

allprojects {
    project.ext.set("versionCode", deployVersionCode)
    project.ext.set("versionName", deployVersionName)
    group = 'com.gbg.smartcapture' // Maven Group ID for the artifact
}
